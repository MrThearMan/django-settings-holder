[tool.poetry]
name = "django-settings-holder"
version = "0.1.0"
description = "Object that allows settings to be accessed with attributes."
authors = [
    "Matti Lamppu <lamppu.matti.akseli@gmail.com>",
]
packages = [
    { include = "settings_holder" },
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/MrThearMan/django-settings-holder"
repository = "https://github.com/MrThearMan/django-settings-holder"
keywords = [
    "django",
    "settings",
    "holder",
]
include = [
    "README.md",
    "LICENSE",
]
classifiers = [
    "Environment :: Web Environment",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]
exclude = [
    "tests",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MrThearMan/django-settings-holder/issues"

[tool.poetry.dependencies]
python = ">=3.8,<4"

[tool.poetry.group.test.dependencies]
Django = "4.1.3"
pytest = "7.2.0"
coverage = "6.5.0"
pytest-django = "4.5.2"
pre-commit = "2.20.0"
tox = "3.27.1"
tox-gh-actions = "2.11.0"
coveralls = "3.3.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "1.4.2"
pymdown-extensions = "9.8"
mkdocs-mermaid2-plugin = "0.6.0"

[tool.poetry.group.lint.dependencies]
mypy = "0.991"
django-stubs = "1.13.0"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = "True"
lines_after_imports = 2

[tool.ruff]
fix = true
line-length = 120
exclude = [
    "tests/*",
]
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    # "D",  # pydocstyle
    # "N",  # pep8-naming
    "S",  # flake8-bandit
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "T",  # flake8-print
    "W",  # pycodestyle warnings
    # "ANN",  # flake8-annotations
]
ignore = [
]

[tool.mypy]
python_version = "3.10"
warn_return_any = "True"
warn_unused_configs = "True"
plugins = [
    "mypy_django_plugin.main",
]

[tool.coverage.run]
relative_files = true

[tool.coverage.report]
omit = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
    "pragma: no cover",
]

[tool.pytest.ini_options]
addopts = "-vv -s --log-cli-level=INFO"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38, 39, 310, 311}-django{30, 31, 32, 40, 41}
isolated_build = true

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
whitelist_externals =
    poetry
setenv =
    PYTHONPATH = {toxinidir}
deps =
    django30: Django >=3.0,<3.1
    django31: Django >=3.1,<3.2
    django32: Django >=3.2,<3.3
    django40: Django >=4.0,<4.1
    django41: Django >=4.1,<4.2

    pytest
    coverage
commands =
    coverage run -m pytest -vv -s --log-cli-level=INFO
"""

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"